/**
 *  Copyright 2012 GroupDocs.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.groupdocs.sdk.model;

import java.util.*;
import com.groupdocs.sdk.model.ConditionInfo;
import com.groupdocs.sdk.model.Rectangle;
import com.groupdocs.sdk.model.AnswerInfo;
import com.groupdocs.sdk.model.FieldDimension;
/**
 * 
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */
public class QuestionInfo {
  private String field = null;
  private String text = null;
  private String def_answer = null;
  private Boolean required = null;
  private Boolean disabled = null;
  private String type = null;
  private List<AnswerInfo> answers = new ArrayList<AnswerInfo>();
  private List<ConditionInfo> conditions = new ArrayList<ConditionInfo>();
  private List<String> acceptableValues = new ArrayList<String>();
  private Integer max_length = null;
  private Rectangle rect = null;
  private String regionName = null;
  private String hint = null;
  private FieldDimension dimension = null;
  public String getField() {
    return field;
  }
  public void setField(String field) {
    this.field = field;
  }

  public String getText() {
    return text;
  }
  public void setText(String text) {
    this.text = text;
  }

  public String getDef_answer() {
    return def_answer;
  }
  public void setDef_answer(String def_answer) {
    this.def_answer = def_answer;
  }

  public Boolean getRequired() {
    return required;
  }
  public void setRequired(Boolean required) {
    this.required = required;
  }

  public Boolean getDisabled() {
    return disabled;
  }
  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }

  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  public List<AnswerInfo> getAnswers() {
    return answers;
  }
  public void setAnswers(List<AnswerInfo> answers) {
    this.answers = answers;
  }

  public List<ConditionInfo> getConditions() {
    return conditions;
  }
  public void setConditions(List<ConditionInfo> conditions) {
    this.conditions = conditions;
  }

  public List<String> getAcceptableValues() {
    return acceptableValues;
  }
  public void setAcceptableValues(List<String> acceptableValues) {
    this.acceptableValues = acceptableValues;
  }

  public Integer getMax_length() {
    return max_length;
  }
  public void setMax_length(Integer max_length) {
    this.max_length = max_length;
  }

  public Rectangle getRect() {
    return rect;
  }
  public void setRect(Rectangle rect) {
    this.rect = rect;
  }

  public String getRegionName() {
    return regionName;
  }
  public void setRegionName(String regionName) {
    this.regionName = regionName;
  }

  public String getHint() {
    return hint;
  }
  public void setHint(String hint) {
    this.hint = hint;
  }

  public FieldDimension getDimension() {
    return dimension;
  }
  public void setDimension(FieldDimension dimension) {
    this.dimension = dimension;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuestionInfo {\n");
    sb.append("  field: ").append(field).append("\n");
    sb.append("  text: ").append(text).append("\n");
    sb.append("  def_answer: ").append(def_answer).append("\n");
    sb.append("  required: ").append(required).append("\n");
    sb.append("  disabled: ").append(disabled).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  answers: ").append(answers).append("\n");
    sb.append("  conditions: ").append(conditions).append("\n");
    sb.append("  acceptableValues: ").append(acceptableValues).append("\n");
    sb.append("  max_length: ").append(max_length).append("\n");
    sb.append("  rect: ").append(rect).append("\n");
    sb.append("  regionName: ").append(regionName).append("\n");
    sb.append("  hint: ").append(hint).append("\n");
    sb.append("  dimension: ").append(dimension).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

