/**
 *  Copyright 2012 GroupDocs.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.groupdocs.sdk.model;

import java.util.*;
import com.groupdocs.sdk.model.Rectangle;
/**
 * 
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */
public class TemplateField {
  private Integer page = null;
  private String name = null;
  private String type = null;
  private Rectangle rect = null;
  private Integer maxlength = null;
  private Boolean mandatory = null;
  private String fieldtype = null;
  private List<String> acceptableValues = new ArrayList<String>();
  private Integer selectionPosition = null;
  private Integer selectionLength = null;
  private Boolean isTableStartMarker = null;
  private Boolean isTableEndMarker = null;
  private String regionName = null;
  public Integer getPage() {
    return page;
  }
  public void setPage(Integer page) {
    this.page = page;
  }

  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  public Rectangle getRect() {
    return rect;
  }
  public void setRect(Rectangle rect) {
    this.rect = rect;
  }

  public Integer getMaxlength() {
    return maxlength;
  }
  public void setMaxlength(Integer maxlength) {
    this.maxlength = maxlength;
  }

  public Boolean getMandatory() {
    return mandatory;
  }
  public void setMandatory(Boolean mandatory) {
    this.mandatory = mandatory;
  }

  public String getFieldtype() {
    return fieldtype;
  }
  public void setFieldtype(String fieldtype) {
    this.fieldtype = fieldtype;
  }

  public List<String> getAcceptableValues() {
    return acceptableValues;
  }
  public void setAcceptableValues(List<String> acceptableValues) {
    this.acceptableValues = acceptableValues;
  }

  public Integer getSelectionPosition() {
    return selectionPosition;
  }
  public void setSelectionPosition(Integer selectionPosition) {
    this.selectionPosition = selectionPosition;
  }

  public Integer getSelectionLength() {
    return selectionLength;
  }
  public void setSelectionLength(Integer selectionLength) {
    this.selectionLength = selectionLength;
  }

  public Boolean getIsTableStartMarker() {
    return isTableStartMarker;
  }
  public void setIsTableStartMarker(Boolean isTableStartMarker) {
    this.isTableStartMarker = isTableStartMarker;
  }

  public Boolean getIsTableEndMarker() {
    return isTableEndMarker;
  }
  public void setIsTableEndMarker(Boolean isTableEndMarker) {
    this.isTableEndMarker = isTableEndMarker;
  }

  public String getRegionName() {
    return regionName;
  }
  public void setRegionName(String regionName) {
    this.regionName = regionName;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class TemplateField {\n");
    sb.append("  page: ").append(page).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  rect: ").append(rect).append("\n");
    sb.append("  maxlength: ").append(maxlength).append("\n");
    sb.append("  mandatory: ").append(mandatory).append("\n");
    sb.append("  fieldtype: ").append(fieldtype).append("\n");
    sb.append("  acceptableValues: ").append(acceptableValues).append("\n");
    sb.append("  selectionPosition: ").append(selectionPosition).append("\n");
    sb.append("  selectionLength: ").append(selectionLength).append("\n");
    sb.append("  isTableStartMarker: ").append(isTableStartMarker).append("\n");
    sb.append("  isTableEndMarker: ").append(isTableEndMarker).append("\n");
    sb.append("  regionName: ").append(regionName).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

