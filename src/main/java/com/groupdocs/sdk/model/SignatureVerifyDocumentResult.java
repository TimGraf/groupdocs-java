/**
 *  Copyright 2012 GroupDocs.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.groupdocs.sdk.model;

import java.util.*;
import com.groupdocs.sdk.model.SignatureSignerInfo;
/**
 * 
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */
public class SignatureVerifyDocumentResult {
  private Boolean authentic = null;
  private List<String> datesSigned = new ArrayList<String>();
  private List<String> references = new ArrayList<String>();
  private List<SignatureSignerInfo> recipients = new ArrayList<SignatureSignerInfo>();
  public Boolean getAuthentic() {
    return authentic;
  }
  public void setAuthentic(Boolean authentic) {
    this.authentic = authentic;
  }

  public List<String> getDatesSigned() {
    return datesSigned;
  }
  public void setDatesSigned(List<String> datesSigned) {
    this.datesSigned = datesSigned;
  }

  public List<String> getReferences() {
    return references;
  }
  public void setReferences(List<String> references) {
    this.references = references;
  }

  public List<SignatureSignerInfo> getRecipients() {
    return recipients;
  }
  public void setRecipients(List<SignatureSignerInfo> recipients) {
    this.recipients = recipients;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignatureVerifyDocumentResult {\n");
    sb.append("  authentic: ").append(authentic).append("\n");
    sb.append("  datesSigned: ").append(datesSigned).append("\n");
    sb.append("  references: ").append(references).append("\n");
    sb.append("  recipients: ").append(recipients).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

