/**
 *  Copyright 2012 GroupDocs.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.groupdocs.sdk.model;

/**
 * 
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */
public class SignatureFormSettingsInfo {
  private String name = null;
  private String fieldsInFinalFileName = null;
  private Boolean canParticipantDownloadForm = null;
  private String waterMarkText = null;
  private String waterMarkImage = null;
  private Boolean notifyOwnerOnSign  = null;
  private Boolean attachSignedDocument = null;
  private String notifyOtherOnSign  = null;
  private Boolean canParticipantPrintForm = null;
  private Boolean requireUserAuthForSign = null;
  private Boolean requestUserAuthByPhoto = null;
  private Boolean enableTypedSignature = null;
  private Boolean enableUploadedSignature = null;
  private Boolean requireUserIdentityValidation = null;
  private Boolean canBeCommented = null;
  private Boolean showParticipantCommentInSignedDocument = null;
  private String tags = null;
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  public String getFieldsInFinalFileName() {
    return fieldsInFinalFileName;
  }
  public void setFieldsInFinalFileName(String fieldsInFinalFileName) {
    this.fieldsInFinalFileName = fieldsInFinalFileName;
  }

  public Boolean getCanParticipantDownloadForm() {
    return canParticipantDownloadForm;
  }
  public void setCanParticipantDownloadForm(Boolean canParticipantDownloadForm) {
    this.canParticipantDownloadForm = canParticipantDownloadForm;
  }

  public String getWaterMarkText() {
    return waterMarkText;
  }
  public void setWaterMarkText(String waterMarkText) {
    this.waterMarkText = waterMarkText;
  }

  public String getWaterMarkImage() {
    return waterMarkImage;
  }
  public void setWaterMarkImage(String waterMarkImage) {
    this.waterMarkImage = waterMarkImage;
  }

  public Boolean getNotifyOwnerOnSign () {
    return notifyOwnerOnSign ;
  }
  public void setNotifyOwnerOnSign (Boolean notifyOwnerOnSign ) {
    this.notifyOwnerOnSign  = notifyOwnerOnSign ;
  }

  public Boolean getAttachSignedDocument() {
    return attachSignedDocument;
  }
  public void setAttachSignedDocument(Boolean attachSignedDocument) {
    this.attachSignedDocument = attachSignedDocument;
  }

  public String getNotifyOtherOnSign () {
    return notifyOtherOnSign ;
  }
  public void setNotifyOtherOnSign (String notifyOtherOnSign ) {
    this.notifyOtherOnSign  = notifyOtherOnSign ;
  }

  public Boolean getCanParticipantPrintForm() {
    return canParticipantPrintForm;
  }
  public void setCanParticipantPrintForm(Boolean canParticipantPrintForm) {
    this.canParticipantPrintForm = canParticipantPrintForm;
  }

  public Boolean getRequireUserAuthForSign() {
    return requireUserAuthForSign;
  }
  public void setRequireUserAuthForSign(Boolean requireUserAuthForSign) {
    this.requireUserAuthForSign = requireUserAuthForSign;
  }

  public Boolean getRequestUserAuthByPhoto() {
    return requestUserAuthByPhoto;
  }
  public void setRequestUserAuthByPhoto(Boolean requestUserAuthByPhoto) {
    this.requestUserAuthByPhoto = requestUserAuthByPhoto;
  }

  public Boolean getEnableTypedSignature() {
    return enableTypedSignature;
  }
  public void setEnableTypedSignature(Boolean enableTypedSignature) {
    this.enableTypedSignature = enableTypedSignature;
  }

  public Boolean getEnableUploadedSignature() {
    return enableUploadedSignature;
  }
  public void setEnableUploadedSignature(Boolean enableUploadedSignature) {
    this.enableUploadedSignature = enableUploadedSignature;
  }

  public Boolean getRequireUserIdentityValidation() {
    return requireUserIdentityValidation;
  }
  public void setRequireUserIdentityValidation(Boolean requireUserIdentityValidation) {
    this.requireUserIdentityValidation = requireUserIdentityValidation;
  }

  public Boolean getCanBeCommented() {
    return canBeCommented;
  }
  public void setCanBeCommented(Boolean canBeCommented) {
    this.canBeCommented = canBeCommented;
  }

  public Boolean getShowParticipantCommentInSignedDocument() {
    return showParticipantCommentInSignedDocument;
  }
  public void setShowParticipantCommentInSignedDocument(Boolean showParticipantCommentInSignedDocument) {
    this.showParticipantCommentInSignedDocument = showParticipantCommentInSignedDocument;
  }

  public String getTags() {
    return tags;
  }
  public void setTags(String tags) {
    this.tags = tags;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignatureFormSettingsInfo {\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  fieldsInFinalFileName: ").append(fieldsInFinalFileName).append("\n");
    sb.append("  canParticipantDownloadForm: ").append(canParticipantDownloadForm).append("\n");
    sb.append("  waterMarkText: ").append(waterMarkText).append("\n");
    sb.append("  waterMarkImage: ").append(waterMarkImage).append("\n");
    sb.append("  notifyOwnerOnSign : ").append(notifyOwnerOnSign ).append("\n");
    sb.append("  attachSignedDocument: ").append(attachSignedDocument).append("\n");
    sb.append("  notifyOtherOnSign : ").append(notifyOtherOnSign ).append("\n");
    sb.append("  canParticipantPrintForm: ").append(canParticipantPrintForm).append("\n");
    sb.append("  requireUserAuthForSign: ").append(requireUserAuthForSign).append("\n");
    sb.append("  requestUserAuthByPhoto: ").append(requestUserAuthByPhoto).append("\n");
    sb.append("  enableTypedSignature: ").append(enableTypedSignature).append("\n");
    sb.append("  enableUploadedSignature: ").append(enableUploadedSignature).append("\n");
    sb.append("  requireUserIdentityValidation: ").append(requireUserIdentityValidation).append("\n");
    sb.append("  canBeCommented: ").append(canBeCommented).append("\n");
    sb.append("  showParticipantCommentInSignedDocument: ").append(showParticipantCommentInSignedDocument).append("\n");
    sb.append("  tags: ").append(tags).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

