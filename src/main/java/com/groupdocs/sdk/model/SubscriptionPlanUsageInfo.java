/**
 *  Copyright 2012 GroupDocs.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.groupdocs.sdk.model;

/**
 * 
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */
public class SubscriptionPlanUsageInfo {
  private Integer users = null;
  private Long document_count = null;
  private Integer viewer = null;
  private Integer signature = null;
  private Integer assembly = null;
  private Integer comparison = null;
  private Integer conversion = null;
  private Integer sharing = null;
  private Integer api = null;
  private Boolean branding = null;
  private Integer max_document_size = null;
  private Integer annotation = null;
  private Long storage_space = null;
  private Integer document_tokens = null;
  private Boolean watermarking = null;
  private Boolean storage_providers = null;
  private Boolean private_storage = null;
  private Integer embeddings = null;
  public Integer getUsers() {
    return users;
  }
  public void setUsers(Integer users) {
    this.users = users;
  }

  public Long getDocument_count() {
    return document_count;
  }
  public void setDocument_count(Long document_count) {
    this.document_count = document_count;
  }

  public Integer getViewer() {
    return viewer;
  }
  public void setViewer(Integer viewer) {
    this.viewer = viewer;
  }

  public Integer getSignature() {
    return signature;
  }
  public void setSignature(Integer signature) {
    this.signature = signature;
  }

  public Integer getAssembly() {
    return assembly;
  }
  public void setAssembly(Integer assembly) {
    this.assembly = assembly;
  }

  public Integer getComparison() {
    return comparison;
  }
  public void setComparison(Integer comparison) {
    this.comparison = comparison;
  }

  public Integer getConversion() {
    return conversion;
  }
  public void setConversion(Integer conversion) {
    this.conversion = conversion;
  }

  public Integer getSharing() {
    return sharing;
  }
  public void setSharing(Integer sharing) {
    this.sharing = sharing;
  }

  public Integer getApi() {
    return api;
  }
  public void setApi(Integer api) {
    this.api = api;
  }

  public Boolean getBranding() {
    return branding;
  }
  public void setBranding(Boolean branding) {
    this.branding = branding;
  }

  public Integer getMax_document_size() {
    return max_document_size;
  }
  public void setMax_document_size(Integer max_document_size) {
    this.max_document_size = max_document_size;
  }

  public Integer getAnnotation() {
    return annotation;
  }
  public void setAnnotation(Integer annotation) {
    this.annotation = annotation;
  }

  public Long getStorage_space() {
    return storage_space;
  }
  public void setStorage_space(Long storage_space) {
    this.storage_space = storage_space;
  }

  public Integer getDocument_tokens() {
    return document_tokens;
  }
  public void setDocument_tokens(Integer document_tokens) {
    this.document_tokens = document_tokens;
  }

  public Boolean getWatermarking() {
    return watermarking;
  }
  public void setWatermarking(Boolean watermarking) {
    this.watermarking = watermarking;
  }

  public Boolean getStorage_providers() {
    return storage_providers;
  }
  public void setStorage_providers(Boolean storage_providers) {
    this.storage_providers = storage_providers;
  }

  public Boolean getPrivate_storage() {
    return private_storage;
  }
  public void setPrivate_storage(Boolean private_storage) {
    this.private_storage = private_storage;
  }

  public Integer getEmbeddings() {
    return embeddings;
  }
  public void setEmbeddings(Integer embeddings) {
    this.embeddings = embeddings;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionPlanUsageInfo {\n");
    sb.append("  users: ").append(users).append("\n");
    sb.append("  document_count: ").append(document_count).append("\n");
    sb.append("  viewer: ").append(viewer).append("\n");
    sb.append("  signature: ").append(signature).append("\n");
    sb.append("  assembly: ").append(assembly).append("\n");
    sb.append("  comparison: ").append(comparison).append("\n");
    sb.append("  conversion: ").append(conversion).append("\n");
    sb.append("  sharing: ").append(sharing).append("\n");
    sb.append("  api: ").append(api).append("\n");
    sb.append("  branding: ").append(branding).append("\n");
    sb.append("  max_document_size: ").append(max_document_size).append("\n");
    sb.append("  annotation: ").append(annotation).append("\n");
    sb.append("  storage_space: ").append(storage_space).append("\n");
    sb.append("  document_tokens: ").append(document_tokens).append("\n");
    sb.append("  watermarking: ").append(watermarking).append("\n");
    sb.append("  storage_providers: ").append(storage_providers).append("\n");
    sb.append("  private_storage: ").append(private_storage).append("\n");
    sb.append("  embeddings: ").append(embeddings).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

